NOTE: with additinal rule to eliminate text copies: <xsl:template match="text()"></xsl:template>

Result:
Subtree(Set(Root),[],[
    Subtree(Set(Element(html)),[],[
        Subtree(Set(Element(head)),[],[
            Subtree(Set(Element(title)),[],[
                Subtree(Set(Text(Testing XML Example)),[],[])
            ])
        ]),
        Subtree(Set(Element(body)),[],[
            Subtree(Set(Element(h1)),[],[
                Subtree(Set(Text(Persons)),[],[])
            ]),
            Subtree(Set(Element(ul)),[],[
                Subtree(Set(Element(li)),[],[
                    Subtree(Set(AnyText),[],[]),
                    Subtree(Set(Text(, )),[],[]),
                    Subtree(Set(AnyText),[],[])
                ]),
                Subtree(Set(Element(li)),[],[
                    Subtree(Set(AnyText),[],[]),
                    Subtree(Set(Text(, )),[],[]),
                    Subtree(Set(AnyText),[],[])
                ])*
            ])
        ])
    ])
])

Expected:
Subtree(Set(Root),[],[
    Subtree(Set(Element(html)),[],[
        Subtree(Set(Element(head)),[],[
            Subtree(Set(Element(title)),[],[
                Subtree(Set(Text(Testing XML Example)),[],[])
            ])
        ]),
        Subtree(Set(Element(body)),[],[
            Subtree(Set(Element(h1)),[],[
                Subtree(Set(Text(Persons)),[],[])
            ]),
            Subtree(Set(Element(ul)),[],[
                Subtree(Set(Element(li)),[],[
                    Subtree(Set(Text(Smith, John)),[],[])
                ]),
                Subtree(Set(Element(li)),[],[
                    Subtree(Set(Text(Ismincius, Morka)),[],[])
                ])
            ])
        ])
    ])
])